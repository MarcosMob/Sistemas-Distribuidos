# Define para onde o tráfego será enviado (o nome do serviço no Docker Compose)
upstream tinder_gamer_api {
    server api:8000;
}

server {
    listen 80;

    # Localização para toda a API e o frontend servido pelo Python
    location / {
        proxy_pass http://tinder_gamer_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- SEÇÃO CRÍTICA PARA O CHAT ---
    # Quando a requisição for para /chat/ws/...
    location /chat/ws/ {
        proxy_pass http://tinder_gamer_api; # Envia para o mesmo backend

        # Comandos mágicos para "promover" a conexão para WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        
        # Headers padrão
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # --- OTIMIZAÇÃO (Opcional, mas recomendado) ---
    # Se você quiser que o Nginx sirva os arquivos estáticos
    # location /static {
    #     alias /app/frontend/static; # Caminho DENTRO do container
    # }
}